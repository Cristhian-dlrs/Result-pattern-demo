version: "3.8"

services:
  # techdemo-api:
  #   container_name: techdemo-api
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "5001:5001"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #   restart: always
  #   networks:
  #     - app-network
  #   depends_on:
  #     - kafka
  #     - sqlserver
  #     - elasticsearch

  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "devP@ss123"
    restart: always
    ports:
      - 1433:1433
    volumes:
      - sql-server-data:/var/opt/mssql
    networks:
      - app-network

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    restart: always
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - app-network

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.7.1
    ports:
      - 5601:5601
    environment:
      - ELASTICSEACH_URL=http://localhost:9200
    restart: always
    networks:
      - app-network
    depends_on:
      - elasticsearch

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    restart: always
    volumes:
      - zookeeper_data:/data
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    restart: always
    volumes:
      - kafka-data:/kafka
    depends_on:
      - zookeeper
    networks:
      - app-network

volumes:
  sql-server-data:
  elasticsearch-data:
  kafka-data:
  zookeeper_data:

networks:
  app-network:
    driver: bridge
